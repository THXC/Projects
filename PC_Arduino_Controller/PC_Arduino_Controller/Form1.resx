<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SerialPort1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /T+3/7uJrliRrwAAAABJRU5ErkJggg==
</value>
  </data>
</root>