<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SerialPort1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tDZSC/wPt/+7iTgn4DYAAAAASUVORK5CYII=
</value>
  </data>
</root>